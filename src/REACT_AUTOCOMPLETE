import React, { useEffect, useState } from "react";
import b from "../package.json";
import staticData from "./recipes.json";
function AutoComplete() {
  const [inputValue, setInputValue] = useState("");
  const [apiData, setApiData] = useState([]);
  let version = b.version;
  const fetchApi = async () => {
    if (inputValue && inputValue.trim() !== "") {
      let sData = staticData?.recipes?.filter((item) =>
        item.name.toLowerCase().includes(inputValue.toLowerCase())
      );
      if (sData.length > 0) {
        setApiData(sData);
      } else {
        const response = await fetch("https://dummyjson.com/recipes");
        if (!response.ok) {
          throw new Error("Error while fetching the data!");
        }
        try {
          const data = await response.json();
          setApiData(
            data?.recipes?.filter((item) =>
              item.name.toLowerCase().includes(inputValue.toLowerCase())
            )
          );
        } catch (e) {
          console.log(e, "error while fetching the data from the api!");
        }
      }
    }
  };
  useEffect(() => {
    let debounce = setTimeout(() => {
      fetchApi();
    }, 2000);
    return () => {
      clearTimeout(debounce);
    };
  }, [inputValue]);

  const handleSearch = (e) => {
    setInputValue(e.target.value);
  };
  return (
    <div>
      <h3>Auto Complete</h3>
      {apiData.length > 0 ? (
        <select>
          {apiData.map((item) => (
            <option key={item.id} value={item.name}>
              {item.name}
            </option>
          ))}
        </select>
      ) : (
        <input
          type="text"
          value={inputValue}
          onChange={(e) => handleSearch(e)}
        ></input>
      )}
      <h5>{version}</h5>
    </div>
  );
}

export default AutoComplete;
